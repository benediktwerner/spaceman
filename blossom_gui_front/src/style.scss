@font-face {
    font-family: 'Euclic Circular A Bold Italic';
    src: url(font/euclid_circular_a_bold_italic.ttf);
}

@font-face {
    font-family: 'Euclic Circular A Regular';
    src: url(font/euclid_circular_a_regular.ttf);
}

html, body, .ui {
    height: 100%;
    box-sizing: border-box;
    margin: 0;
}

$bg: #191616;

.ui {
    background: $bg;

    > .pane {
        width: 100%;
        height: 100%;
    }
}

.ui > .pane > .lhs {
    min-width: 200px;
}

.ui > .pane > .rhs {
    min-width: 0;
}

/* Begin Pane */

.pane {
    display: flex;
    flex-direction: row;
}

.pane > .resizer {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.pane > .resizer > .handle {
    background: #362E2E;
    height: 30px;
    align-self: stretch;
    cursor: col-resize;
}

.pane > .resizer > .line {
    flex: 1;
    width: 1px;
    background: #362E2E;

    $gap: 4px;
    &:nth-child(1) {
        margin-bottom: $gap;
    }
    &:nth-child(3) {
        margin-top: $gap;
    }
}

.pane > .rhs {
    flex: 1 1 0%;
}

.pane > .lhs > *, .pane > .rhs > * {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
}

/* End Pane */

/* Begin Button */

$fg: #FBFBFB;

.button {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    height: 54px;
    flex-shrink: 0;

    background: none;
    border: 1px solid $fg;
    color: $fg;

    > img {
        width: 22px;
        height: auto;
        margin-right: 2px;
    }

    font-family: 'Euclic Circular A Bold Italic';
    font-size: 18px;

    margin: 0;
    padding: 0 20px;

    cursor: pointer;
    user-select: none;
}

.button:hover {
    background: $fg;
    color: $bg;
    > img {
        filter: invert(1);
    }
}

@mixin colored-button($bg, $fg) {
    background-color: $bg;
    color: $fg;
    border-color: $fg;
    &:hover {
        background: darken($bg, 10%);
        color: darken($fg, 10%);
        border-color: darken($fg, 10%);
    }
    border-width: 2px;
}

.button.green {
    @include colored-button(#04FF78, #088B45);
}

.button.red {
    @include colored-button(#FF044F, #8B082F);
}

.button.blue {
    @include colored-button(#04B4FF, #08638B);
}

.button.cyan {
    @include colored-button(#04E1FF, #087B8B);
}

/* End Button */

/* Begin Sidebar */

.sidebar {
    display: flex;
    flex-direction: column;
}

.sidebar > .button {
    align-self: stretch;
    margin: 8px;
}

/* End Sidebar */

/* Begin Repo */

.repo {
    min-height: 0;
    display: flex;
    flex-direction: column;
}

.repo .content {
    display: flex;
    flex-direction: column;

    margin-left: 8px;

    overflow-x: hidden;
    overflow-y: auto;

    padding-bottom: 48px;
}

.repo input {
    margin: 8px;
    // Because Settings button already adds a gap
    margin-top: 0px;

    padding: 4px 8px;

    height: 22px;
    flex-shrink: 0;

    background: none;
    border: 1px solid $fg;
    color: $fg;

    font-family: 'Euclic Circular A';
    font-size: 14px;

    &:focus {
        outline: none;
    }
}

.repo .service {
    display: flex;
    flex-direction: column;
    align-items: flex-start;

    margin-bottom: 12px;
    &:last-child {
        margin-bottom: 0;
    }

    > .name {
        font-family: 'Euclic Circular A Regular';
        color: $fg;
        font-size: 16px;

        margin-bottom: 6px;
    }
}

.repo .method {
    display: flex;
    flex-direction: row;

    height: 40px;

    > .uplink {
        margin-left: 14px;

        width: 20px;
        height: 40px;
    }

    > .name {
        align-self: center;

        cursor: pointer;

        border: 1px solid $fg;
        box-sizing: border-box;
        padding: 6px;
        
        font-family: 'Euclic Circular A Regular';
        color: $fg;
        font-size: 18px;

        &:hover {
            background: $fg;
            color: $bg;
        }
    }
}

/* End Repo */

/* Begin Scrollbar */

::-webkit-scrollbar {
    height: 6px;
    width: 6px;
}

::-webkit-scrollbar-track {
    background: none;
}

$thumb-color: #413838;

::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: lighten($thumb-color, 5%);
}

::-webkit-scrollbar-thumb:active {
    background: lighten($thumb-color, 10%);
}

::-webkit-scrollbar-corner {
    background: none;
}

/* End Scrollbar */


.main {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

/* Begin Tabs */

.main .tabs {
    height: 54px;
    box-sizing: border-box;

    display: flex;
    flex-direction: row;
    
    border: 1px solid #736363;
    border-left: none;
    border-right: none;

    padding: 4px;
    margin-top: 8px;

    overflow: auto;
}

// Supposed to be applied to .tabs, but doesn't work that way... because of some reasons
.main > ::-webkit-scrollbar-thumb {
    border: 2px solid $bg;
    border-top: none;
}

// Supposed to be applied to .tabs, but doesn't work that way... because of some reasons
.main > ::-webkit-scrollbar {
    height: 6px;
}

.main .tab {
    border: 1px solid $fg;

    cursor: pointer;

    display: flex;
    flex-direction: row;
    align-items: stretch;

    margin-right: 4px;
    &:last-child {
        margin-right: 0;
    }
}

.main .tab .name {
    font-family: 'Euclic Circular A Regular';
    color: $fg;
    font-size: 18px;

    &:hover {
        color: $bg;
    }
}

.main .tab .close {
    > img {
        width: 18px;
        height: auto;
    }

    &:hover > img {
        filter: invert(1);
    }
}

.main .tab .name, .main .tab .close {
    padding: 0 6px;
    display: flex;
    align-items: center;

    &:hover {
        background: $fg;
    }
}

.main .tab.active {
    .name {
        color: $bg;
        background: $fg;
    }
}

/* End Tabs */

/* Begin Tab Content */

.tab-content {
    flex: 1;
    padding: 8px 14px 12px 14px;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.tab-content > .header {
    margin-bottom: 10px;
}

.tab-content > .pane {
    flex: 1;
}

.tab-content > .header {
    display: flex;
    flex-direction: row;
    > * {
        margin-right: 4px;
        &:last-child {
            margin-right: 0;
        }
    }
}

.tab-content .pane {
    .lhs, .rhs {
        min-width: 200px;
    }
    .main-pane-col {
        height: 100%;
        width: 100%;
    }
}

.tab-content .main-pane-col {
    display: flex;
    flex-direction: column;
    align-items: stretch;

    > * {
        margin-bottom: 6px;
        &:last-child {
            margin-bottom: 0;
        }
    }
}

$main-pane-col-gap: 2px;

.tab-content {
    .lhs .main-pane-col {
        padding-right: $main-pane-col-gap;
    }
    .rhs .main-pane-col {
        padding-left: $main-pane-col-gap;
    }
}

.tab-content textarea {
    outline: none;
    background: #0E0C0C;
    border: 1px solid #404040;

    flex: 1;
    resize: none;

    padding: 12px 13px;
    box-sizing: border-box;

    color: #D8D1D1;
    font-family: "Iosevka";
    font-size: 22px;

    white-space: pre;
    overflow-wrap: normal;
    overflow-x: scroll;

    margin: 0;
}

// For the text area
.tab-content {
    ::-webkit-scrollbar {
        height: 10px;
        width: 10px;
    }

    ::-webkit-scrollbar-thumb {
        height: 6px;
        width: 6px;
        border: 2px solid #0E0C0C;
    }
}

.stream-controls {
    display: flex;
    flex-direction: row;
    align-items: stretch;

    > * {
        margin-right: 4px;
        &:last-child {
            margin-right: 0;
        }
    }
}

.stream-controls {
    .follow {
        flex: 2;
    }
    .counter {
        flex-basis: 70px;
    }
    .prev, .next {
        flex: 1;
    }
}

.stream-controls .counter {
    display: grid;
    grid-template-rows: 46% auto 46%;
    grid-template-columns: 46% auto 46%;
}

.stream-controls .counter .current, .stream-controls .counter .of {
    color: $fg;
    font-family: 'Euclic Circular A Bold Italic';
    font-size: 20px;
    
    display: flex;
    align-items: center;
    justify-content: center;
}

.stream-controls .counter .line {
    color: $fg;
    grid-column: 1 / 4;
    grid-row: 1 / 4;

    display: flex;
    align-items: center;
    justify-content: center;
}

.stream-controls .counter {
    .current {
        grid-column: 1 / 3;
        grid-row: 1 / 3;
    }
    .of {
        grid-column: 2 / 4;
        grid-row: 2 / 4;
    }
}

/* End Tab Content */
